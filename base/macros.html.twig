{% macro renderMarkerCounter(files) %}
    {% set count = 0 %}
    {% for file in files %}
        {% set count = count + file.markers|length %}
    {% endfor %}
    <span class="label label-info">{{ count }}</span>
{% endmacro %}

{% macro renderErrorCounter(files) %}
    {% set count = 0 %}
    {% for file in files %}
        {% for error in file.allerrors %}
            {% if error.code != 'PPC:ERR-50000' %}
                {% set count = count + 1 %}
            {% endif %}
        {% endfor %}
    {% endfor %}
    <span class="label label-info">{{ count }}</span>
{% endmacro %}

{% macro renderDeprecatedCounter(elements) %}
    {% set count = 0 %}
    {% for element in elements %}
        {% if element.deprecated %}
            {% set count = count + element.tags.deprecated.count %}
        {% endif %}
    {% endfor %}
    <span class="label label-info">{{ count }}</span>
{% endmacro %}

{% macro buildBreadcrumb(element) %}
    {% import _self as self %}

    {% if element.parentNamespace and element.parentNamespace.name != '\\' %}
        {{ self.buildBreadcrumb(element.parentNamespace) }}
    {% elseif element.parent and element.parent.name != '\\' %}
        {{ self.buildBreadcrumb(element.parent) }}
    {% endif %}

    <li class="active"><span class="divider">\</span> {{ element.name }}</li>
{% endmacro %}

{% macro elementSummary(element, type) %}
    <div class="element element--clickable element--{{ type }} element--visibility-{{ type not in ['function', 'constant'] ? element.visibility : 'public' }}" id="{{ type }}_{{ element.name }}"{% if type in ['function', 'constant'] %} data-toggle="collapse" data-target="#{{ type }}_{{ element.name }} .collapse"{% endif %}>
        <div>
            <h3 class="element__header">{{ element.name }}</h3>
        </div>
        {% if element.summary %}
            <p class="element__summary">{{ element.summary }}</p>
        {% endif %}
        <div class="collapse">
            {% if type in ['function', 'constant'] %}
                {% include 'class/details.method.html.twig' with {'method': element} %}
            {% elseif element.description %}
                {{ element.description }}
            {% endif %}
        </div>
        {% if path(element) and type not in ['function', 'constant'] %}<a href="{{ path(element|route('url')) }}" class="element__details">« More »</a>{% endif %}
    </div>
{% endmacro %}
